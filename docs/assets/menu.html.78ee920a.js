import{r as t,c as a,a as n,b as e,w as s,F as l,e as p,d as r,o}from"./app.ef7340bf.js";import{_ as c}from"./plugin-vue_export-helper.5a098b48.js";const i={},d=p('<h1 id="导航" tabindex="-1"><a class="header-anchor" href="#导航" aria-hidden="true">#</a> 导航</h1><p>项目导航配置存放在 <code>/src/menu/modules/</code> 目录下，每一个 js 文件会被视为一个导航模块。</p><p>所有配置的导航模块均需要在 <code>/src/menu/index.js</code> 文件里进行引入并放到主导航下。</p><h3 id="一级导航" tabindex="-1"><a class="header-anchor" href="#一级导航" aria-hidden="true">#</a> 一级导航</h3><p>一个导航模块包含以下结构：</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">&#39;演示&#39;</span><span class="token punctuation">,</span>\n    windowName<span class="token operator">:</span> <span class="token string">&#39;Example&#39;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><div class="custom-container warning"><p class="custom-container-title">注意事项</p><ul><li>整个项目所有导航的 <code>windowName</code> 不能重复</li></ul></div><h3 id="多级导航" tabindex="-1"><a class="header-anchor" href="#多级导航" aria-hidden="true">#</a> 多级导航</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">&#39;演示&#39;</span><span class="token punctuation">,</span>\n    children<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">&#39;演示页面&#39;</span><span class="token punctuation">,</span>\n            windowName<span class="token operator">:</span> <span class="token string">&#39;Example&#39;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="外链" tabindex="-1"><a class="header-anchor" href="#外链" aria-hidden="true">#</a> 外链</h3><p>只需要将 <code>windowName</code> 设置为需要跳转的 HTTP 地址即可。</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">&#39;官网&#39;</span><span class="token punctuation">,</span>\n    windowName<span class="token operator">:</span> <span class="token string">&#39;https://hooray.gitee.io/one-step-admin/&#39;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="主导航" tabindex="-1"><a class="header-anchor" href="#主导航" aria-hidden="true">#</a> 主导航</h3><p>主导航会将我们配置好的导航模块进行归类，在 <code>/src/menu/index.js</code> 里进行设置。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> menu <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">&#39;演示&#39;</span><span class="token punctuation">,</span>\n        icon<span class="token operator">:</span> <span class="token string">&#39;sidebar-default&#39;</span><span class="token punctuation">,</span>\n        children<span class="token operator">:</span> <span class="token punctuation">[</span>\n            WindowExample<span class="token punctuation">,</span>\n            ComponentBasicExample\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n        title<span class="token operator">:</span> <span class="token string">&#39;其它&#39;</span><span class="token punctuation">,</span>\n        icon<span class="token operator">:</span> <span class="token string">&#39;sidebar-other&#39;</span>\n        children<span class="token operator">:</span> <span class="token punctuation">[</span>\n            MockExample<span class="token punctuation">,</span>\n            PermissionExample\n        <span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>主导航只需设置 <code>title</code> 、<code>icon</code> 和 <code>children</code> 三个参数，其中 <code>children</code> 则是存放我们配置的导航模块数据。</p><h2 id="导航配置" tabindex="-1"><a class="header-anchor" href="#导航配置" aria-hidden="true">#</a> 导航配置</h2><h3 id="title" tabindex="-1"><a class="header-anchor" href="#title" aria-hidden="true">#</a> title</h3><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">✔️</td><td style="text-align:left;">导航展示的标题</td></tr></tbody></table><h3 id="windowname" tabindex="-1"><a class="header-anchor" href="#windowname" aria-hidden="true">#</a> windowName</h3><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">✔️</td><td style="text-align:left;">窗口组件名，确保唯一</td></tr></tbody></table>',21),h={id:"i18n",tabindex:"-1"},u=n("a",{class:"header-anchor",href:"#i18n","aria-hidden":"true"},"#",-1),g=r(" i18n "),b=p('<table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">✖️</td><td style="text-align:left;">标题国际化对应的 key 值</td></tr></tbody></table>',1),k={id:"notitle",tabindex:"-1"},x=n("a",{class:"header-anchor",href:"#notitle","aria-hidden":"true"},"#",-1),y=r(" noTitle "),m=p('<table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">boolean</td><td style="text-align:center;">✖️</td><td style="text-align:left;">是否显示窗口标题栏</td></tr></tbody></table><h3 id="icon" tabindex="-1"><a class="header-anchor" href="#icon" aria-hidden="true">#</a> icon</h3><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">✖️</td><td style="text-align:left;">导航中显示的图标，图标使用 <code>&lt;svg-icon /&gt;</code> 组件展示</td></tr></tbody></table><p>专业版支持使用 ElementPlus Icon 和 RemixIcon 图标：</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>icon<span class="token operator">:</span> <span class="token string">&#39;el-icon-star-on&#39;</span>\nicon<span class="token operator">:</span> <span class="token string">&#39;ri-star-fill&#39;</span>\n</code></pre></div><h3 id="auth" tabindex="-1"><a class="header-anchor" href="#auth" aria-hidden="true">#</a> auth</h3><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">string / array</td><td style="text-align:center;">✖️</td><td style="text-align:left;">该路由访问权限，支持多个权限叠加，只要满足一个，即可进入</td></tr></tbody></table>',7),f=r("用户在登录时，会获取用户权限，根据权限去过滤并动态注册路由。所以没有权限的路由不会被注册，也不会在侧边栏导航里显示，详细可阅读《"),v=r("权限 - 路由权限"),j=r("》。"),w={id:"badge",tabindex:"-1"},E=n("a",{class:"header-anchor",href:"#badge","aria-hidden":"true"},"#",-1),B=r(" badge "),N=p('<table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">boolean / number / string</td><td style="text-align:center;">✖️</td><td style="text-align:left;">导航标记</td></tr></tbody></table><p>设置不同的类型值，展示效果也会不同。</p><ul><li><code>boolean</code> 展示形式为点，当值为 false 时隐藏</li><li><code>number</code> 展示形式为文本，当值小于等于 0 时隐藏</li><li><code>string</code> 展示形式为文本，当值为空时隐藏</li></ul><p>如果标记需要动态更新，请设置为箭头函数形式，并返回外部变量，例如搭配 vuex 一起使用。</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function-variable function">badge</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>global<span class="token punctuation">.</span>number\n</code></pre></div><h3 id="params" tabindex="-1"><a class="header-anchor" href="#params" aria-hidden="true">#</a> params</h3><table><thead><tr><th style="text-align:center;">类型</th><th style="text-align:center;">是否必须</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">object</td><td style="text-align:center;">✖️</td><td style="text-align:left;">窗口外部传入参数</td></tr></tbody></table><p>该属性通常不在导航里直接配置，而是通过调用全局 <code>this.$window.add()</code> 打开非导航窗口时动态传入窗口所需要的参数。</p><h2 id="后端生成" tabindex="-1"><a class="header-anchor" href="#后端生成" aria-hidden="true">#</a> 后端生成</h2><p>在框架配置里开启：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>enableBackendReturnMenu<span class="token operator">:</span> <span class="token boolean">true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>开启后访问 <code>/src/store/modules/menu.js</code> 文件，找到 <code>generateRoutesAtBack()</code> 这个 action 方法，你要做的就是修改这个方法里的请求地址，请求返回的数据就是导航数据，你可以在 <code>/src/mock/menu.js</code> 里查看 mock 数据。</p><p>开启后端生成后，导航权限有两种做法，一种是后端直接返回用户具备访问权限的导航数据，另一种则返回全部的导航的数据，让框架自行处理。两种做法的区别在于第一种返回的导航数据里，无需设置 auth 参数。</p>',13);var R=c(i,[["render",function(p,r){const c=t("Badge"),i=t("RouterLink");return o(),a(l,null,[d,n("h3",h,[u,g,e(c,{type:"tip",text:"专业版",vertical:"top"})]),b,n("h3",k,[x,y,e(c,{type:"tip",text:"专业版",vertical:"top"})]),m,n("p",null,[f,e(i,{to:"/guide/permission.html#%E8%B7%AF%E7%94%B1%E6%9D%83%E9%99%90"},{default:s((()=>[v])),_:1}),j]),n("h3",w,[E,B,e(c,{type:"tip",text:"专业版",vertical:"top"})]),N],64)}]]);export{R as default};

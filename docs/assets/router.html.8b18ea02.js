import{r as n,c as s,a,b as t,F as p,d as e,e as o,o as i}from"./app.a0198442.js";import{_ as c}from"./plugin-vue_export-helper.5a098b48.js";const l={},r=a("h1",{id:"路由",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#路由","aria-hidden":"true"},"#"),e(" 路由")],-1),u=a("p",null,[e("由于框架采用了全新的交互方式，使得路由在本框架中并非核心功能。通过打开 "),a("code",null,"/src/router/index.js"),e(" 可以看到，框架一共定义了两个路由地址，一个是登录地址，另一个是登录成功后的地址。")],-1),d={id:"免登录页面",tabindex:"-1"},h=a("a",{class:"header-anchor",href:"#免登录页面","aria-hidden":"true"},"#",-1),k=e(" 免登录页面 "),g=o('<p>基于设置的路由规则，新增的任何路由，都必须登录后才能访问。如果希望增加免登录的页面，也就是脱离框架本身，相对独立的页面，你可以按照下面的方式处理。</p><p>首先在 <code>/src/router/index.js</code> 里 <code>routes</code> 配置免登录页面的路由，然后在 <code>noLoginWhitelist</code> 里增加一句路由完整地址。例如下面的例子，就增加了一个 <code>/no/login/example</code> 的免登录页面地址。</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// 固定路由</span>\n<span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>\n\t<span class="token operator">...</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n        path<span class="token operator">:</span> <span class="token string">&#39;/no/login/example&#39;</span><span class="token punctuation">,</span>\n        name<span class="token operator">:</span> <span class="token string">&#39;noLoginExample&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/no-login-example.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        meta<span class="token operator">:</span> <span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">&#39;免登录页面&#39;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n\n<span class="token comment">// 免登录白名单</span>\n<span class="token keyword">const</span> noLoginWhitelist <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token operator">...</span><span class="token punctuation">,</span>\n\t<span class="token string">&#39;/no/login/example&#39;</span>\n<span class="token punctuation">]</span>\n</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><div class="highlight-line"> </div><br></div></div>',3);var v=c(l,[["render",function(e,o){const c=n("Badge");return i(),s(p,null,[r,u,a("h2",d,[h,k,t(c,{type:"tip",text:"专业版",vertical:"top"})]),g],64)}]]);export{v as default};
